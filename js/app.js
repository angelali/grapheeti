// Generated by CoffeeScript 1.6.3
$(function() {
  var colorNode, createNode, deleteNodeOrLink, force, g, height, link, links, node, nodes, renameNode, renderLinks, renderNodes, selectedLink, selectedNode, tick, toggleLinkSelect, toggleNodeSelect, width;
  width = $(document).width() - $("#instructions").outerWidth();
  height = $(document).height();
  g = d3.select("body").append("svg").attr("width", width).attr("height", height);
  nodes = [
    {
      name: "Angela Li"
    }, {
      name: "Angela Lee"
    }, {
      name: "Vivian Leung"
    }
  ];
  links = [
    {
      source: 0,
      target: 1
    }, {
      source: 0,
      target: 2
    }, {
      source: 1,
      target: 0
    }
  ];
  tick = function() {
    link.attr("x1", function(d) {
      return d.source.x;
    }).attr("y1", function(d) {
      return d.source.y;
    }).attr("x2", function(d) {
      return d.target.x;
    }).attr("y2", function(d) {
      return d.target.y;
    });
    return node.attr("cx", function(d) {
      return d.x;
    }).attr("cy", function(d) {
      return d.y;
    });
  };
  force = d3.layout.force().linkDistance(100).charge(-500).nodes(nodes).links(links).size([width, height]).on("tick", tick).start();
  renderNodes = function() {
    return g.selectAll(".node").data(nodes).enter().append("circle").attr("r", 20).style("fill", "#AAA");
  };
  renderLinks = function() {
    return g.selectAll(".link").data(links).enter().append("line");
  };
  link = renderLinks();
  node = renderNodes();
  node.append("title").text(function(d) {
    return d.name;
  });
  selectedNode = null;
  selectedLink = null;
  createNode = function() {
    return console.log("TODO: make new node");
  };
  toggleNodeSelect = function() {
    return console.log("TODO: select / deselect node");
  };
  toggleLinkSelect = function() {
    return console.log("TODO: select link");
  };
  deleteNodeOrLink = function() {
    if (!(selectedNode || selectedLink)) {
      return;
    }
    return console.log("TODO: delete node or link");
  };
  renameNode = function() {
    var name;
    if (!selectedNode) {
      return;
    }
    name = prompt("Please enter a new name:");
    return console.log("TODO: rename node " + name);
  };
  colorNode = function() {
    var color, pattern;
    if (!selectedNode) {
      return;
    }
    color = prompt("Please enter a new hex color:");
    pattern = /^#[0-9A-F]{6}$/i;
    if (pattern.test(color)) {
      return console.log("TODO: color node " + color);
    }
  };
  d3.select("html").on("keypress", function() {
    switch (d3.event.keyCode) {
      case 100:
        return deleteNodeOrLink();
      case 110:
        return renameNode();
      case 99:
        return colorNode();
    }
  });
  return g.on("click", function() {
    switch (d3.event.toElement.tagName) {
      case "svg":
        return createNode();
      case "circle":
        return toggleNodeSelect();
      case "line":
        return toggleLinkSelect();
    }
  });
});
